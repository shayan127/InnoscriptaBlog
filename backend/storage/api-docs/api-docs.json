{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/blogs": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Create a Blog",
                "description": "Create a new Blog.",
                "operationId": "163c9d485fea7b09d51b6ceb5b8e66fe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlogRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Blog created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/blogs/{id}": {
            "put": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Update a Blog",
                "description": "Update an existing Blog.",
                "operationId": "3ea95b7e4df029108300c7b1cdaab4de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlogRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog updated successfully"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Delete a Blog",
                "description": "Delete a Blog.",
                "operationId": "0eff8bd8dd339995b4d69ea9abed49e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog deleted successfully"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/blogs/search": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Search for blogs",
                "description": "Search for Blogs.",
                "operationId": "2283b60aa636448cce2a854ea022130f",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "apple"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "example": "2024-02-25"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Technology"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "The New York Times"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results returned successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sources": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Get unique blog sources",
                "description": "Get Sources",
                "operationId": "e8384b0489ef339111b92b9ff93c686f",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filter sources by search keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of unique sources"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/authors": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Get unique blog authors",
                "description": "Get Authors",
                "operationId": "8e3a68343b725c146599a5abf9a14bf5",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filter authors by search keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of unique authors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Get list of categories",
                "description": "Get Categories",
                "operationId": "1ef318b850bbebd571e63a2f7958472c",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filter categories by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Create a new category",
                "description": "Create Category",
                "operationId": "7007391db9e8729dc5bbeb036e83a2cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Technology"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "put": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Update an existing category",
                "description": "Update Category",
                "operationId": "9cc317c60960a5b49cf5d6e964f6b525",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Science"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Delete a category",
                "description": "Delete Category",
                "operationId": "c018d35e3c9eed042517046d90e781ba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "description": "User login and JWT token generation",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login with JWT token"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get logged-in user details",
                "description": "Returns details of the authenticated user.",
                "operationId": "bfe1d8ee397d4e8589fee09919f74751",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Refresh JWT token",
                "description": "Refreshes the authentication token for the logged-in user.",
                "operationId": "089dbf17b53118b637823e16bf4a40f9",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user-preferences": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "user preferences",
                "description": "Store a new user preference.",
                "operationId": "6fdca46a76f20124018cf0e7645c19ee",
                "responses": {
                    "200": {
                        "description": "List of preferences"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a new user preference",
                "description": "Store a new user preference.",
                "operationId": "b13785de7d94dead27a84fc979c59018",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "value"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "theme"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "dark_mode"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Preference created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user-preferences/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user preference",
                "description": "Delete a user preference.",
                "operationId": "75a470ba31ccd74ac5ac6cf10ca655a1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preference deleted successfully"
                    },
                    "404": {
                        "description": "Preference not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BlogRequest": {
                "required": [
                    "title",
                    "content",
                    "url",
                    "source",
                    "authors"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "New blog"
                    },
                    "snippet": {
                        "type": "string",
                        "maxLength": 500,
                        "example": "New blog content...",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "example": "New blog content ..."
                    },
                    "url": {
                        "type": "string",
                        "format": "url",
                        "maxLength": 500,
                        "example": "https://example.com/blog/new-blog"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-02-25T12:00:00Z",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "The New York Times"
                    },
                    "origin": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "NYT",
                        "nullable": true
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 255,
                            "example": "Shayan"
                        }
                    },
                    "image": {
                        "type": "string",
                        "format": "url",
                        "maxLength": 500,
                        "example": "https://example.com/images/1.jpg",
                        "nullable": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "headers": {
            "Accept": {
                "description": "Accept header for the request",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "application/json"
                    ]
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Blogs",
            "description": "Blogs"
        },
        {
            "name": "Metadata",
            "description": "Metadata"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}