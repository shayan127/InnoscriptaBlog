version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        depends_on:
            redis:
                condition: service_started
            elasticsearch:
                condition: service_started
            mysql:
                condition: service_healthy
        environment:
            - APP_DEBUG=true
            - NEWS_API_KEY=57fa6287496e4a75879a2cb784198740
            - NYT_API_KEY=IDrLE2dO57XkaKKlvZV95M6Ef2VE6H7i
            - GUARDIAN_API_KEY=b22131cb-8121-41bc-8bb8-5d302d1498b6
            - DB_PASSWORD=secret
            - DB_HOST=mysql
            - ELASTICSEARCH_HOST=http://elasticsearch:9200
        command: >
            sh -c "
            sleep 20 &&
            curl -X DELETE 'http://elasticsearch:9200/blogs' &&
            php artisan migrate:fresh --seed &&
            while true; do php artisan queue:work --tries=3; sleep 60; done &
            while true; do php artisan schedule:run >> /dev/null 2>&1; sleep 60; done &
            php-fpm"
        networks:
            - laravel_network

    mysql:
        image: mysql:latest
        container_name: mysql
        restart: unless-stopped
        environment:
            - MYSQL_ROOT_PASSWORD=secret
            - MYSQL_DATABASE=blog
        ports:
            - "3306:3306"
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
            timeout: 30s
            retries: 10
        networks:
            - laravel_network

    redis:
        image: redis:latest
        container_name: redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - laravel_network

    elasticsearch:
        image: elasticsearch:8.17.2
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
        ports:
            - "9200:9200"
        networks:
            - laravel_network

    nginx:
        image: nginx:latest
        container_name: nginx
        restart: unless-stopped
        ports:
            - "8181:80"
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - laravel_network

networks:
    laravel_network:
